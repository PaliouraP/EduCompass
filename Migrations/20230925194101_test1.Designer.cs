// <auto-generated />
using System;
using EduCompass.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EduCompass.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230925194101_test1")]
    partial class test1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EduCompass.Models.Answer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Answer1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Answer2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Answer3")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Answer4")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CorrectAnswer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("QuestionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Answers");
                });

            modelBuilder.Entity("EduCompass.Models.Career", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CoefficientName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Name");

                    b.ToTable("Careers");
                });

            modelBuilder.Entity("EduCompass.Models.Coefficient", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("NameInGreek")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Name");

                    b.ToTable("Coefficients");

                    b.HasData(
                        new
                        {
                            Name = "SoftwareEngineering",
                            NameInGreek = "Τεχνολογία Λογισμικού"
                        },
                        new
                        {
                            Name = "AI_ML",
                            NameInGreek = "Τεχνητή Νοημοσύνη και Μηχανική Μάθηση"
                        },
                        new
                        {
                            Name = "UI_UX",
                            NameInGreek = "Αλληλεπίδραση Ανθρώπου-Υπολογιστή"
                        },
                        new
                        {
                            Name = "Security",
                            NameInGreek = "Ασφάλεια"
                        },
                        new
                        {
                            Name = "ComputerNetworks",
                            NameInGreek = "Δίκτυα Υπολογιστών"
                        },
                        new
                        {
                            Name = "ComputerVisionAndGraphics",
                            NameInGreek = "Ανάλυση Εικόνας και Γραφικών"
                        },
                        new
                        {
                            Name = "GameDev",
                            NameInGreek = "Ανάπτυξη Ηλεκτρονικών Παιχνιδιών"
                        },
                        new
                        {
                            Name = "DatabaseEngineering",
                            NameInGreek = "Ανάπτυξη Βάσεων Δεδομένων και Επιστήμη Δεδομένων"
                        },
                        new
                        {
                            Name = "WebDev",
                            NameInGreek = "Ανάπτυξη Διαδικτυακών Εφαρμογών"
                        },
                        new
                        {
                            Name = "MobileAppDev",
                            NameInGreek = "Ανάπτυξη Εφαρμογών Κινητών Τηλεφώνων"
                        });
                });

            modelBuilder.Entity("EduCompass.Models.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AudioFileName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Semester")
                        .HasColumnType("int");

                    b.Property<string>("UUID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AudioFileName = "",
                            Content = "",
                            Description = "",
                            Name = "Σύγχρονα Θέματα Τεχνολογίας Λογισμικού",
                            Semester = 7,
                            UUID = "ΠΛΘΕΤΚΑΕ01"
                        },
                        new
                        {
                            Id = 2,
                            AudioFileName = "",
                            Content = "",
                            Description = "",
                            Name = "Αντικειμενοστρεφής Ανάπτυξη Εφαρμογών",
                            Semester = 3,
                            UUID = "ΠΛΠΛΗ37-3"
                        },
                        new
                        {
                            Id = 3,
                            AudioFileName = "",
                            Content = "",
                            Description = "",
                            Name = "Αντικειμενοστρεφής Προγραμματισμός",
                            Semester = 2,
                            UUID = "ΠΛΠΛΗ37-2"
                        },
                        new
                        {
                            Id = 4,
                            AudioFileName = "",
                            Content = "",
                            Description = "",
                            Name = "Εικονική Πραγματικότητα",
                            Semester = 7,
                            UUID = "ΠΛΕΙΚ03"
                        },
                        new
                        {
                            Id = 5,
                            AudioFileName = "",
                            Content = "",
                            Description = "",
                            Name = "Ευφυείς Πράκτορες",
                            Semester = 8,
                            UUID = "ΠΛΕΥΠΡ01"
                        },
                        new
                        {
                            Id = 6,
                            AudioFileName = "",
                            Content = "",
                            Description = "",
                            Name = "Τεχνολογίες Ανάπτυξης Ηλεκτρονικών Παιχνιδιών",
                            Semester = 7,
                            UUID = "ΠΛΤΑΗΠ01"
                        });
                });

            modelBuilder.Entity("EduCompass.Models.CourseHasCoefficient", b =>
                {
                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<string>("CoefficientName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Value")
                        .HasColumnType("int");

                    b.HasKey("CourseId", "CoefficientName");

                    b.ToTable("CourseHasCoefficients");

                    b.HasData(
                        new
                        {
                            CourseId = 1,
                            CoefficientName = "MobileAppDev",
                            Value = 10
                        },
                        new
                        {
                            CourseId = 1,
                            CoefficientName = "SoftwareEngineering",
                            Value = 10
                        },
                        new
                        {
                            CourseId = 1,
                            CoefficientName = "WebDev",
                            Value = 5
                        },
                        new
                        {
                            CourseId = 2,
                            CoefficientName = "SoftwareEngineering",
                            Value = 10
                        },
                        new
                        {
                            CourseId = 2,
                            CoefficientName = "WebDev",
                            Value = 4
                        },
                        new
                        {
                            CourseId = 2,
                            CoefficientName = "MobileAppDev",
                            Value = 3
                        },
                        new
                        {
                            CourseId = 2,
                            CoefficientName = "DatabaseEngineering",
                            Value = 1
                        },
                        new
                        {
                            CourseId = 2,
                            CoefficientName = "GameDev",
                            Value = 1
                        },
                        new
                        {
                            CourseId = 3,
                            CoefficientName = "SoftwareEngineering",
                            Value = 10
                        },
                        new
                        {
                            CourseId = 3,
                            CoefficientName = "MobileAppDev",
                            Value = 2
                        },
                        new
                        {
                            CourseId = 3,
                            CoefficientName = "WebDev",
                            Value = 1
                        },
                        new
                        {
                            CourseId = 4,
                            CoefficientName = "GameDev",
                            Value = 10
                        },
                        new
                        {
                            CourseId = 4,
                            CoefficientName = "ComputerVisionAndGraphics",
                            Value = 7
                        },
                        new
                        {
                            CourseId = 4,
                            CoefficientName = "AI_ML",
                            Value = 2
                        },
                        new
                        {
                            CourseId = 5,
                            CoefficientName = "AI_ML",
                            Value = 10
                        },
                        new
                        {
                            CourseId = 5,
                            CoefficientName = "GameDev",
                            Value = 8
                        },
                        new
                        {
                            CourseId = 6,
                            CoefficientName = "GameDev",
                            Value = 10
                        },
                        new
                        {
                            CourseId = 6,
                            CoefficientName = "SoftwareEngineering",
                            Value = 3
                        });
                });

            modelBuilder.Entity("EduCompass.Models.CourseQuizGrade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<int>("Grade")
                        .HasColumnType("int");

                    b.Property<DateTime>("TimeFinished")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("TimeStarted")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("CourseQuizGrades");
                });

            modelBuilder.Entity("EduCompass.Models.Grade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int>("FinalGrade")
                        .HasColumnType("int");

                    b.Property<int>("InterestScore")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Grades");
                });

            modelBuilder.Entity("EduCompass.Models.PostGraduateInstitution", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Department")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Hyperlink")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Town")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PostGraduateInstitutions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Department = "Επιστήμη Δεδομένων και Μηχανική Μάθηση",
                            Description = "",
                            Hyperlink = "https://dsml.ece.ntua.gr/",
                            Name = "Εθνικό Μετσόβειο Πολυτεχνείο",
                            Town = "Αθήνα"
                        },
                        new
                        {
                            Id = 2,
                            Department = "Κυβερνοασφάλεια και Επιστήμη Δεδομένων",
                            Description = "",
                            Hyperlink = "https://www.cs.unipi.gr/index.php?option=com_k2&view=item&layout=item&id=609&Itemid=813&lang=el",
                            Name = "Πανεπιστήμιο Πειραιώς",
                            Town = "Πειραιάς"
                        },
                        new
                        {
                            Id = 3,
                            Department = "Προηγμένα Συστήματα Πληροφορικής - Ανάπτυξη Λογισμικού και Τεχνητής Νοημοσύνης",
                            Description = "",
                            Hyperlink = "https://www.cs.unipi.gr/index.php?option=com_k2&view=item&layout=item&id=626&Itemid=815&lang=el",
                            Name = "Πανεπιστήμιο Πειραιώς",
                            Town = "Πειραιάς"
                        },
                        new
                        {
                            Id = 4,
                            Department = "Ψηφιακός Πολιτισμός, Έξυπνες Πόλεις, IoT και Προηγμένες Ψηφιακές Τεχνολογίες",
                            Description = "",
                            Hyperlink = "https://www.cs.unipi.gr/index.php?option=com_k2&view=item&layout=item&id=576&Itemid=814&lang=el",
                            Name = "Πανεπιστήμιο Πειραιώς",
                            Town = "Πειραιάς"
                        },
                        new
                        {
                            Id = 5,
                            Department = "Προηγμένες Τεχνολογίες Πληροφορικής και Υπηρεσίες",
                            Description = "",
                            Hyperlink = "https://www.cs.unipi.gr/index.php?option=com_k2&view=item&layout=item&id=653&Itemid=812&lang=el",
                            Name = "Πανεπιστήμιο Πειραιώς",
                            Town = "Πειραιάς"
                        },
                        new
                        {
                            Id = 6,
                            Department = "Ανάπτυξη και Ασφάλεια Πληροφοριακών Συστημάτων",
                            Description = "",
                            Hyperlink = "https://mscis.cs.aueb.gr/el/normal/home",
                            Name = "Οικονομικό Πανεπιστήμιο Αθηνών",
                            Town = "Αθήνα"
                        },
                        new
                        {
                            Id = 7,
                            Department = "Επιστήμη Δεδομένων",
                            Description = "",
                            Hyperlink = "https://www.dept.aueb.gr/el/cs/content/%CF%80%CE%BC%CF%83-%CF%83%CF%84%CE%B7%CE%BD-%CE%B5%CF%80%CE%B9%CF%83%CF%84%CE%AE%CE%BC%CE%B7-%CE%B4%CE%B5%CE%B4%CE%BF%CE%BC%CE%AD%CE%BD%CF%89%CE%BD",
                            Name = "Οικονομικό Πανεπιστήμιο Αθηνών",
                            Town = "Αθήνα"
                        },
                        new
                        {
                            Id = 8,
                            Department = "Μηχανική Υπολογιστών, Τηλεποικοινωνιών και Δικτύων",
                            Description = "",
                            Hyperlink = "https://www.di.uoa.gr/eng",
                            Name = "Εθνικό Καποδιστριακό Πανεπιστήμιο Αθηνών",
                            Town = "Αθήνα"
                        },
                        new
                        {
                            Id = 9,
                            Department = "Τεχνολογίες Πληροφορικής και Τηλεποικοινωνιών",
                            Description = "",
                            Hyperlink = "https://www.di.uoa.gr/ict",
                            Name = "Εθνικό Καποδιστριακό Πανεπιστήμιο Αθηνών",
                            Town = "Αθήνα"
                        },
                        new
                        {
                            Id = 10,
                            Department = "Data Science and Information Technologies",
                            Description = "",
                            Hyperlink = "https://dsit.di.uoa.gr/",
                            Name = "Εθνικό Καποδιστριακό Πανεπιστήμιο Αθηνών",
                            Town = "Αθήνα"
                        },
                        new
                        {
                            Id = 11,
                            Department = "Προηγμένη Τεχνολογία Λογισμικού",
                            Description = "",
                            Hyperlink = "https://mai.uom.gr/frontend/articles.php?cid=41&t=Proigmeni-Texnologia-Logismikou",
                            Name = "Πανεπιστήμιο Μακεδονίας",
                            Town = "Θεσσαλονίκη"
                        },
                        new
                        {
                            Id = 12,
                            Department = "Ανάπτυξη Ψηφιακών Παιχνιδιών και Πολυμεσικών Εφαρμογών",
                            Description = "",
                            Hyperlink = "https://gamedev.uowm.gr/",
                            Name = "Πανεπιστήμιο Μακεδονίας",
                            Town = "Θεσσαλονίκη"
                        },
                        new
                        {
                            Id = 13,
                            Department = "Ανάπτυξη Εφαρμογών Ιστού και Κινητών Συσκευών",
                            Description = "",
                            Hyperlink = "https://mai.uom.gr/frontend/articles.php?cid=159&t=Anaptuksi-Efarmogwn-Istou-kai-Kinitwn-Suskeuwn",
                            Name = "Πανεπιστήμιο Μακεδονίας",
                            Town = "Θεσσαλονίκη"
                        },
                        new
                        {
                            Id = 14,
                            Department = "Αλληλεπίδραση Ανθρώπου-Υπολογιστή",
                            Description = "",
                            Hyperlink = "https://hcimaster.upatras.gr/regulation/",
                            Name = "Πανεπιστήμιο Πατρών",
                            Town = "Πάτρα"
                        });
                });

            modelBuilder.Entity("EduCompass.Models.PostGraduateInstitutionHasCoefficient", b =>
                {
                    b.Property<int>("PostGraduateInstitutionId")
                        .HasColumnType("int");

                    b.Property<string>("CoefficientName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("HasCoefficient")
                        .HasColumnType("bit");

                    b.HasKey("PostGraduateInstitutionId", "CoefficientName");

                    b.ToTable("PostGraduateInstitutionHasCoefficients");

                    b.HasData(
                        new
                        {
                            PostGraduateInstitutionId = 1,
                            CoefficientName = "AI_ML",
                            HasCoefficient = true
                        },
                        new
                        {
                            PostGraduateInstitutionId = 2,
                            CoefficientName = "AI_ML",
                            HasCoefficient = true
                        },
                        new
                        {
                            PostGraduateInstitutionId = 3,
                            CoefficientName = "AI_ML",
                            HasCoefficient = true
                        },
                        new
                        {
                            PostGraduateInstitutionId = 7,
                            CoefficientName = "AI_ML",
                            HasCoefficient = true
                        },
                        new
                        {
                            PostGraduateInstitutionId = 9,
                            CoefficientName = "AI_ML",
                            HasCoefficient = true
                        },
                        new
                        {
                            PostGraduateInstitutionId = 10,
                            CoefficientName = "AI_ML",
                            HasCoefficient = true
                        },
                        new
                        {
                            PostGraduateInstitutionId = 3,
                            CoefficientName = "SoftwareEngineering",
                            HasCoefficient = true
                        },
                        new
                        {
                            PostGraduateInstitutionId = 11,
                            CoefficientName = "SoftwareEngineering",
                            HasCoefficient = true
                        },
                        new
                        {
                            PostGraduateInstitutionId = 1,
                            CoefficientName = "DatabaseEngineering",
                            HasCoefficient = true
                        },
                        new
                        {
                            PostGraduateInstitutionId = 2,
                            CoefficientName = "DatabaseEngineering",
                            HasCoefficient = true
                        },
                        new
                        {
                            PostGraduateInstitutionId = 7,
                            CoefficientName = "DatabaseEngineering",
                            HasCoefficient = true
                        },
                        new
                        {
                            PostGraduateInstitutionId = 10,
                            CoefficientName = "DatabaseEngineering",
                            HasCoefficient = true
                        },
                        new
                        {
                            PostGraduateInstitutionId = 2,
                            CoefficientName = "Security",
                            HasCoefficient = true
                        },
                        new
                        {
                            PostGraduateInstitutionId = 4,
                            CoefficientName = "Security",
                            HasCoefficient = true
                        },
                        new
                        {
                            PostGraduateInstitutionId = 5,
                            CoefficientName = "Security",
                            HasCoefficient = true
                        },
                        new
                        {
                            PostGraduateInstitutionId = 6,
                            CoefficientName = "Security",
                            HasCoefficient = true
                        },
                        new
                        {
                            PostGraduateInstitutionId = 4,
                            CoefficientName = "Networks",
                            HasCoefficient = true
                        },
                        new
                        {
                            PostGraduateInstitutionId = 5,
                            CoefficientName = "Networks",
                            HasCoefficient = true
                        },
                        new
                        {
                            PostGraduateInstitutionId = 8,
                            CoefficientName = "Networks",
                            HasCoefficient = true
                        },
                        new
                        {
                            PostGraduateInstitutionId = 9,
                            CoefficientName = "Networks",
                            HasCoefficient = true
                        },
                        new
                        {
                            PostGraduateInstitutionId = 4,
                            CoefficientName = "WebDev",
                            HasCoefficient = true
                        },
                        new
                        {
                            PostGraduateInstitutionId = 6,
                            CoefficientName = "WebDev",
                            HasCoefficient = true
                        },
                        new
                        {
                            PostGraduateInstitutionId = 9,
                            CoefficientName = "WebDev",
                            HasCoefficient = true
                        },
                        new
                        {
                            PostGraduateInstitutionId = 13,
                            CoefficientName = "WebDev",
                            HasCoefficient = true
                        },
                        new
                        {
                            PostGraduateInstitutionId = 13,
                            CoefficientName = "UI_UX",
                            HasCoefficient = true
                        },
                        new
                        {
                            PostGraduateInstitutionId = 14,
                            CoefficientName = "UI_UX",
                            HasCoefficient = true
                        },
                        new
                        {
                            PostGraduateInstitutionId = 12,
                            CoefficientName = "GameDev",
                            HasCoefficient = true
                        },
                        new
                        {
                            PostGraduateInstitutionId = 13,
                            CoefficientName = "MobileAppDev",
                            HasCoefficient = true
                        },
                        new
                        {
                            PostGraduateInstitutionId = 12,
                            CoefficientName = "ComputerVisionAndGraphics",
                            HasCoefficient = true
                        });
                });

            modelBuilder.Entity("EduCompass.Models.PrerequisiteCourse", b =>
                {
                    b.Property<int>("BaseCourseId")
                        .HasColumnType("int");

                    b.Property<int>("PrerequisiteCourseId")
                        .HasColumnType("int");

                    b.HasKey("BaseCourseId", "PrerequisiteCourseId");

                    b.ToTable("PrerequisiteCourses");
                });

            modelBuilder.Entity("EduCompass.Models.Question", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Questions");
                });

            modelBuilder.Entity("EduCompass.Models.TimeSpent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<int>("TotalTime")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("TimeSpents");
                });

            modelBuilder.Entity("EduCompass.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("HasCompletedIntroTest")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Semester")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("EduCompass.Models.UserHasCoefficient", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("CoefficientName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<double>("Percentage")
                        .HasColumnType("float");

                    b.HasKey("UserId", "CoefficientName");

                    b.ToTable("UserHasCoefficients");
                });
#pragma warning restore 612, 618
        }
    }
}
